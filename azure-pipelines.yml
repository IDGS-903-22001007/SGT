# =====================================================
# üì¶ Pipeline para HTML Est√°tico (Usando Flask como Servidor)
# Flujo: CI (Build/Test) -> CD (Deploy)
# Objetivo: Despliegue de login.html con trazabilidad
#
# ‚úÖ Pipeline final con correcciones de agente local, empaquetado y sintaxis Azure.
# =====================================================

trigger:
- main

# ‚ö†Ô∏è Seguimos usando el agente local
pool:
  name: 'AgenteLocal'

# Variables del Proyecto
variables:
  AppSourceDir: '$(Build.SourcesDirectory)'
  ArtifactName: 'sgt-deploy-package'
  DeploymentPath: '$(Build.ArtifactStagingDirectory)/$(ArtifactName)' # Ruta de staging para el paquete
  
  # VALORES DE AZURE CONFIRMADOS
  ServiceConnectionName: 'AZ-Conexion-SGT'        
  AppServiceName: 'sgt-app-integrated-2025'       

stages:

# =====================================================
# 1Ô∏è‚É£ Etapa: CI (Integraci√≥n Continua) - Build y Test
# =====================================================
- stage: CI_BuildAndTest
  displayName: 'Etapa 1: Integraci√≥n Continua (Pruebas)'
  jobs:
  - job: PythonCI
    displayName: 'Job: Preparaci√≥n y Pruebas'
    steps:
    
    # --- 1. Configuraci√≥n de Python (Necesario para Gunicorn y Pruebas) ---
    - task: UsePythonVersion@0
      displayName: 'Configurar Python 3.11'
      inputs:
        versionSpec: '3.11'

    # --- 2. Instalaci√≥n de Dependencias y Pruebas ---
    - script: |
        pip install -r requirements.txt
      displayName: 'Instalar Flask y Gunicorn'
      
    - script: |
        pytest test --junitxml=results.xml
      displayName: 'Ejecutar Pruebas de Integraci√≥n Continua'
      continueOnError: false

    - task: PublishTestResults@2
      displayName: 'Publicar Resultados de Pruebas (Actividad 14)'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/results.xml'
        failTaskOnFailedTests: true
        
    # üí• EMPAQUETADO FINAL: Crear la estructura de despliegue
    # --- 4a. Copiar archivos al Staging Directory ---
    # Copia la carpeta 'sgt' completa (con main.py y templates/login.html)
    - task: CopyFiles@2
      displayName: 'Copiar Carpeta SGT al Paquete'
      inputs:
        SourceFolder: '$(AppSourceDir)'
        Contents: 'sgt/**'
        TargetFolder: '$(DeploymentPath)/sgt' 

    # Copia requirements.txt a la ra√≠z del paquete de despliegue
    - task: CopyFiles@2
      displayName: 'Copiar requirements.txt a la Ra√≠z del Paquete'
      inputs:
        SourceFolder: '$(AppSourceDir)'
        Contents: 'requirements.txt' 
        TargetFolder: '$(DeploymentPath)'

    # --- 4b. Publicar Artefactos ---
    - task: PublishBuildArtifacts@1
      displayName: 'Publicar Artefacto de Despliegue'
      inputs:
        pathToPublish: '$(DeploymentPath)'  
        artifactName: '$(ArtifactName)'

# =====================================================
# 2Ô∏è‚É£ Etapa: CD (Despliegue Continuo)
# =====================================================
- stage: CD_Deployment
  displayName: 'Etapa 2: Despliegue (Entorno Integrado Funcional)'
  dependsOn: CI_BuildAndTest
  condition: succeeded()
  
  jobs:
  - deployment: DeployFunctionalIncrement
    displayName: 'Job: Despliegue a App Service'
    
    workspace:
      clean: all
    
    environment: 'Entorno-Integrado-SGT'  
    
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: DownloadPipelineArtifact@2
            displayName: 'Descargar Artefacto de C√≥digo'
            inputs:
              artifactName: '$(ArtifactName)'
              path: '$(Pipeline.Workspace)/$(ArtifactName)' 

          - task: AzureWebApp@1
            displayName: 'Desplegar Archivo HTML con Servidor Python'
            inputs:
              azureSubscription: '$(ServiceConnectionName)'  
              appName: '$(AppServiceName)'   
              appType: webApp
              package: '$(Pipeline.Workspace)/$(ArtifactName)'  
              # Ajuste de PYTHONPATH y comando Gunicorn para encontrar sgt.main:app
              startupCommand: 'export PYTHONPATH=$PYTHONPATH:.; gunicorn --bind=0.0.0.0 --workers=4 --timeout=90 sgt.main:app'
              # Correcci√≥n de sintaxis del error 400 (Parameter name cannot be empty)
              appSettings: '"-WEBSITES_ENABLE_APP_SERVICE_STORAGE true"'
          
          - script: |
              echo "‚úÖ Pipeline CI/CD completado exitosamente."
              echo "Actividad 15: Evidencia de funcionalidad integrada (HTML Desplegado)."
              echo "URL de App Service: https://$(AppServiceName).azurewebsites.net"
            displayName: 'Mensaje de √âxito y URL de Validaci√≥n'
