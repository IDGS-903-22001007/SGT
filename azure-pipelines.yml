# =====================================================
# 📦 Pipeline CI/CD para Flask + HTML (Proyecto SGT)
# =====================================================

trigger:
- main

pool:
  name: 'AgenteLocal'

variables:
  AppSourceDir: '$(Build.SourcesDirectory)'
  ArtifactName: 'sgt-deploy-package'
  ServiceConnectionName: 'AZ-Conexion-SGT'
  AppServiceName: 'sgt-app-integrated-2025'
  PythonVersion: '3.11'

stages:

# =====================================================
# 1️⃣ Etapa: CI (Integración Continua)
# =====================================================
- stage: CI_BuildAndTest
  displayName: 'Etapa 1: Integración Continua (Build y Test)'
  jobs:
  - job: PythonCI
    displayName: 'Job: Preparación y Pruebas Python'
    steps:

    # --- Configurar Python ---
    - task: UsePythonVersion@0
      displayName: '🐍 Configurar Python $(PythonVersion)'
      inputs:
        versionSpec: '$(PythonVersion)'

    # --- Instalar dependencias ---
    - script: |
        echo "Instalando dependencias..."
        pip install -r requirements.txt
      displayName: '📦 Instalar dependencias Flask y Gunicorn'

    # --- Ejecutar pruebas (si existen) ---
    - script: |
        echo "Ejecutando pruebas..."
        pytest test --junitxml=results.xml || echo "Sin pruebas definidas."
      displayName: '🧪 Ejecutar pruebas unitarias'

    - task: PublishTestResults@2
      displayName: '📊 Publicar resultados de pruebas'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/results.xml'
        failTaskOnFailedTests: false

    # --- Publicar artefactos ---
    - task: PublishBuildArtifacts@1
      displayName: '📤 Publicar artefacto del proyecto /sgt'
      inputs:
        pathToPublish: '$(AppSourceDir)/sgt'
        artifactName: '$(ArtifactName)'
        publishLocation: 'Container'


# =====================================================
# 2️⃣ Etapa: CD (Despliegue Continuo)
# =====================================================
- stage: CD_Deployment
  displayName: 'Etapa 2: Despliegue (App Service Integrado)'
  dependsOn: CI_BuildAndTest
  condition: succeeded()

  jobs:
  - deployment: DeployFunctionalIncrement
    displayName: '🚀 Job: Despliegue en Azure Web App'
    environment: 'Entorno-Integrado-SGT'

    strategy:
      runOnce:
        deploy:
          steps:

          # 🔹 Limpiar directorios previos
          - script: |
              echo "🧹 Limpiando workspace previo..."
              rd /s /q "$(Pipeline.Workspace)\artifacts_*" 2>nul || echo "Nada que limpiar"
            displayName: '🧹 Limpiar artefactos antiguos'

          # 🔹 Descargar artefactos del build actual
          - task: DownloadPipelineArtifact@2
            displayName: '⬇️ Descargar artefactos del build actual'
            inputs:
              buildType: 'current'
              artifact: '$(ArtifactName)'
              path: '$(Pipeline.Workspace)/artifacts_$(Build.BuildId)'

          # 🌐 Desplegar en Azure Web App
          - task: AzureWebApp@1
            displayName: '🚀 Desplegar aplicación Flask en Azure App Service'
            inputs:
              azureSubscription: '$(ServiceConnectionName)'
              appName: '$(AppServiceName)'
              appType: 'webApp'
              package: '$(Pipeline.Workspace)/artifacts_$(Build.BuildId)'
              startupCommand: 'gunicorn --bind=0.0.0.0 --workers=4 --timeout=90 main:app'

          # ✅ Mensaje final
          - script: |
              echo "================================================="
              echo "✅ Pipeline CI/CD completado exitosamente"
              echo "🌍 URL de App Service: https://$(AppServiceName).azurewebsites.net"
              echo "================================================="
            displayName: '📢 Mensaje de éxito y validación'
