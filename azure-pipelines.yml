# =====================================================
# üì¶ Pipeline para proyecto Python - Azure DevOps
# Adaptado a la estructura actual con /sgt y /test
# =====================================================

trigger:
- main  # Se ejecuta en cada push a la rama main

pool:
  name: 'AgenteLocal'  # Usa tu agente local o c√°mbialo a 'ubuntu-latest' si es remoto

stages:

# =====================================================
# 1Ô∏è‚É£ Etapa: Configuraci√≥n de Python
# =====================================================
- stage: ConfigurarPython
  displayName: 'Etapa 1: Configurar Python'
  jobs:
  - job: ConfigurarPythonJob
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.11'
      displayName: 'Configurar Python 3.11'

# =====================================================
# 2Ô∏è‚É£ Etapa: Verificar archivos del repositorio
# =====================================================
- stage: VerificarArchivos
  displayName: 'Etapa 2: Verificar archivos en el repo'
  jobs:
  - job: VerificarArchivosJob
    steps:
    - script: dir $(Build.SourcesDirectory)
      displayName: 'Listar archivos del repositorio'

# =====================================================
# 3Ô∏è‚É£ Etapa: Instalar dependencias
# =====================================================
- stage: InstalarDependencias
  displayName: 'Etapa 3: Instalar dependencias'
  jobs:
  - job: InstalarDependenciasJob
    steps:
    - script: |
        cd $(Build.SourcesDirectory)
        python -m venv venv
        venv\Scripts\activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Crear virtualenv e instalar dependencias'

# =====================================================
# 4Ô∏è‚É£ Etapa: Ejecutar pruebas con pytest
# =====================================================
- stage: EjecutarPruebas
  displayName: 'Etapa 4: Ejecutar pruebas'
  jobs:
  - job: EjecutarPruebasJob
    steps:
    - script: |
        cd $(Build.SourcesDirectory)
        venv\Scripts\activate
        pytest test --maxfail=1 --disable-warnings -q
      displayName: 'Ejecutar pruebas con pytest'

# =====================================================
# 5Ô∏è‚É£ Etapa: Publicar artefactos (opcional)
# =====================================================
- stage: PublicarArtefactos
  displayName: 'Etapa 5: Publicar artefactos'
  condition: succeeded()  # Solo si todas las etapas anteriores fueron exitosas
  jobs:
  - job: PublicarArtefactosJob
    steps:
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'dist'
        artifactName: 'build'
      displayName: 'Publicar artefacto del build'
